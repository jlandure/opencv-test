# It's necessary to have an Ubuntu version > 15.04 (vivid)
FROM ubuntu:15.10

# Updating and upgrading
RUN 	apt-get update && \
	apt-get upgrade -y

# Installing necessary packages
RUN	apt-get install -y \
		automake autoconf \
		g++ git make cmake \
		unzip wget build-essential \
		pkg-config libswscale-dev \
		python3-dev python3-numpy \
		libtbb2 libtbb-dev libjpeg-dev \
		libpng-dev libtiff-dev libjasper-dev \
		libmicrohttpd-dev libmicrohttpd10 libtool doxygen-doc

#RUN cd ~ && git clone https://github.com/Microsoft/cpprestsdk.git casablanca

#RUN 	cd ~/casablanca/Release &&\
# 	mkdir ./build.debug &&\
#	cd ./build.debug &&\
#	CXX=g++-4.8 cmake .. -DCMAKE_BUILD_TYPE=Debug &&\
#	make -j4

# Installing the HTTP Rest server C++ lib
RUN cd ~ && git clone https://github.com/etr/libhttpserver.git

RUN 	cd ~/libhttpserver && \
	./bootstrap &&\
	mkdir build &&\
	cd ./build &&\
	../configure &&\ 
	make &&\
	make install &&\
	make doxygen-doc

# Installing OpenCV
RUN cd ~ && wget https://github.com/Itseez/opencv/archive/3.0.0.zip \
 	&& unzip 3.0.0.zip \
	&& cd opencv-3.0.0 && mkdir build && cd build \
	&& cmake .. && make -j2 && make install \
	&& cd && rm -rf opencv-3.0.0 && rm 3.0.0.zip

# Copying example files and creating necessary folders
RUN 	mkdir ~/example &&\
	cd ~/example &&\
	mkdir ./build

COPY ./makefile ./Zenika-Logo-300x140.png ./BP_test.cpp ./BP_Height.cpp  /root/example/

# Correcting last errors
RUN 	apt-get install -y libcurl4-openssl-dev
	

# Building example
RUN cd ~/example && make

ENV LD_LIBRARY_PATH=/usr/local/lib/

WORKDIR /root/example/
#VOLUME /example
EXPOSE 8080
CMD ["/root/example/BP_Height"]


